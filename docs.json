{
    "openapi": "3.0.3",
    "info": {
      "version": "1.2.3",
      "title": "Save Pets",
      "description": "Team project-5 documentation",
      "license": {
        "name": "MIT",
        "url": "https://opensource.org/licenses/MIT"
      }
    },
  
  
  "servers": [{ "url": "https://project-savepets05-be.onrender.com" }],
    "tags": [
       {
        "name": "User",
        "description": "Users endpoints"
      }, 
      {
        "name": "Notice",
        "description": "Notices endpoints"
      }, 
      {
        "name": "Pet",
        "description": "Pets endpoints"
      }
    ],
  
    "paths": {
      "/api/users/register": {
        "post": {
          "tags": ["User"],
          "summary": "Register",
          "description": "Register",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationRequest"
                },
                "example": {
                  "email": "test01@mail.com",
                  "name": "Test01",
                  "password": "A123456a"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Registration Successful",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/RegistrationResponse"
                  }
                }
              }
            },
            "400": {"description": "Registration denied"},
            "409": {"description": "Email in use..."},
            "500": {"description": "Server error"}
          }
        }
      },
      "/api/users/login": {
        "post": {
          "tags": [
            "User"
          ],
          "summary": "Login user",
          "description": "Login",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "email": {
                      "type": "string",
                      "example": "test01@mail.com"
                    },
                    "password": {
                      "type": "string",
                      "example": "A123456a"
                    }
                  }
                },
                "example": {
                  "email": "test01@mail.com",
                  "password": "A123456a"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Login Successful",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/LoginResponse"
                  }
                }
              }
            },
            "401": { "description": "Email or password is wrong"},
            "500": {"description": "Server error"}
          }
        }
      },
      "/api/users/refresh": {
        "post": {
          "tags": [
            "User"
          ],
          "summary": "Refresh token",
          "description": "Refresh",
          "parameters": [],
          "security": [
            {
              "BearerR": []
            }
          ],
          "responses": {
            "200": {
              "description": "Refresh token successful",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/RefreshResponse"
                  }
                }
              }
            },
            "401": {"description": " Not authorized"},
            "500": {"description": "Server error"}
          }

        }
      },
      "/api/users/logout": {
        "post": {
          "tags": [
            "User"
          ],
          "summary": "Logout",
          "description": "Logout",
          "security": [{"BearerA": []}],
          "responses": {
            "204": {"description": "Logout  successful"},
            "401": {"description": " Not authorized" },
            "500": {"description": "Server error"}
          }
          }
      },
      "/api/users/current": {
        "get": {
          "tags": [ "User" ],
          "summary": "Current",
          "description": "Get user info",
          "security": [{"BearerA": []}],
          "responses": {
            "200": {
              "description": "Get user info successful",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/CurrentResponse"
                  }
                }
              }
            },
            "401": {"description": " Not authorized"},
            "500": {"description": "Server error"}
          }
        }
      },
      "/api/users/info": {
        "patch": {
          "tags": [
            "User"
          ],
          "summary": "Info",
          "description": "Update user info ",          
          "security": [{"BearerA": []}],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InfoRequest"
                },
                "example": {
                  "birthday": "10-10-2020",
                  "city": "Ukraine",
                  "email": "test01@mail.com",
                  "name": "Test01",
                  "phone": "+380667778899"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Update user info successful",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties":{
                    "message": {
                      "type": "string",
                      "example": "User info succesfull updated"
                    }
                  }
                  }
                }
              }
            },
            "401": {"description": " Not authorized"},
            "500": {"description": "Server error"}
          }
        }
      },
      "/api/users/avatars": {
        "patch": {
          "tags": ["User"],
          "summary": "Avatar",
          "description": "Update user avatar ",
          "security": [{"BearerA": []}],
          "requestBody": {
            "content": {
              "multipart/form-data": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "avatar": {
                      "type": "string",
                      "format": "binary"
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Update user avatar successful",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties":{
                    "avatarURL": {
                      "type": "string",
                      "example": "v1690859464/avatars/qdzn7idpzuhd2rtkkyav.jpg"
                    }
                  }
                  }
                }
              }
            },
            "400": {"description": "Wrong upload images ..."},
            "401": {"description": "Not authorized"},
            "500": {"description": "Server error"}
          }
        }
      },
      "/api/notices": {
        "post": {
          "tags": [
            "Notice"
          ],
          "summary": "Add notice",
          "requestBody": {
            "content": {
              "multipart/form-data": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string",
                      "example": "new notice1"
                    },
                    "category": {
                      "type": "string",
                      "example": "sell"
                    },
                    "name": {
                      "type": "string",
                      "example": "Jac"
                    },
                    "birthday": {
                      "type": "string",
                      "example": "30-10-2020"
                    },
                    "type": {
                      "type": "string",
                      "example": "qwe"
                    },
                    "sex": {
                      "type": "string",
                      "example": "male"
                    },
                    "location": {
                      "type": "string",
                      "example": "Kharkiv"
                    },
                    "price": {
                      "type": "integer",
                      "example": "100"
                    },
                    "comments": {
                      "type": "string",
                      "example": "dfghjkl; kjhgfds"
                    },
                    "notice": {
                      "type": "string",
                      "format": "binary"
                    }
                  }
                }
              }
            }
          },
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {}
              }
            }
          }
        }
      },
      "/api/notices/categories": {
        "get": {
          "tags": [
            "Notice"
          ],
          "summary": "List notices by category",
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "parameters": [
            {
              "name": "limit",
              "in": "query",
              "schema": {
                "type": "integer"
              },
              "description": "Number notices in response",
              "example": "1"
            },
            {
              "name": "page",
              "in": "query",
              "schema": {
                "type": "integer"
              },
              "description": "Pagination page",
              "example": "1"
            },
            {
              "name": "title",
              "in": "query",
              "schema": {
                "type": "string"
              },
              "description": "Notice title",
              "example": "de"
            },
            {
              "name": "category",
              "in": "query",
              "schema": {
                "type": "string"
              },
              "description": "Category  [\"sell\", \"lost-found\", \"for-free\"]",
              "example": "lost-found"
            },
            {
              "name": "startAge",
              "in": "query",
              "schema": {
                "type": "integer"
              },
              "description": "Age (monts)",
              "example": "25"
            },
            {
              "name": "endAge",
              "in": "query",
              "schema": {
                "type": "integer"
              },
              "description": "Age (monts)",
              "example": "35"
            },
            {
              "name": "sex",
              "in": "query",
              "schema": {
                "type": "string"
              },
              "description": "Sex [\"male\", \"female\"]",
              "example": "male"
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {}
              }
            }
          }
        }
      },
      "/api/notices/{id}": {
        "get": {
          "tags": [
            "Notice"
          ],
          "summary": "Get notice by Id",
          "parameters": [
            {
              "in": "path",
              "name": "id",
              "required": true,
              "type": "string",
              "description": "Get notice by id"
              }
          ],
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {}
              }
            }
          }
        },
        "delete": {
          "tags": [
            "Notice"
          ],
          "summary": "Delete notice",
          "parameters": [
            {
              "in": "path",
              "name": "id",
              "required": true,
              "type": "string",
              "description": "Delete notice by id"
              }
          ],
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {}
              }
            }
          }
        }
      },
      "/api/notices/myads": {
        "get": {
          "tags": [
            "Notice"
          ],
          "summary": "List my notice",
          "security": [{"bearerAuth": []}],
          "parameters": [
            {
              "name": "limit",
              "in": "query",
              "schema": {
                "type": "integer"
              },
              "description": "Number notices in response",
              "example": "1"
            },
            {
              "name": "page",
              "in": "query",
              "schema": {
                "type": "integer"
              },
              "description": "Pagination page",
              "example": "1"
            },
            {
              "name": "title",
              "in": "query",
              "schema": {
                "type": "string"
              },
              "description": "Notice title",
              "example": "de"
            },
            {
              "name": "category",
              "in": "query",
              "schema": {
                "type": "string"
              },
              "description": "Category  [\"sell\", \"lost-found\", \"for-free\"]",
              "example": "lost-found"
            },
            {
              "name": "startAge",
              "in": "query",
              "schema": {
                "type": "integer"
              },
              "description": "Age (monts)",
              "example": "25"
            },
            {
              "name": "endAge",
              "in": "query",
              "schema": {
                "type": "integer"
              },
              "description": "Age (monts)",
              "example": "35"
            },
            {
              "name": "sex",
              "in": "query",
              "schema": {
                "type": "string"
              },
              "description": "Sex [\"male\", \"female\"]",
              "example": "male"
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {}
              }
            }
          }
        }
      },
      "/api/notices/favorite": {
        "get": {
          "tags": ["Notice"],
          "summary": "List favorite notice",
          "security": [{"bearerAuth": []}],
          "parameters": [
            {
              "name": "limit",
              "in": "query",
              "schema": {
                "type": "integer"
              },
              "description": "Number notices in response",
              "example": "1"
            },
            {
              "name": "page",
              "in": "query",
              "schema": {
                "type": "integer"
              },
              "description": "Pagination page",
              "example": "1"
            },
            {
              "name": "title",
              "in": "query",
              "schema": {
                "type": "string"
              },
              "description": "Notice title",
              "example": "de"
            },
            {
              "name": "category",
              "in": "query",
              "schema": {
                "type": "string"
              },
              "description": "Category  [\"sell\", \"lost-found\", \"for-free\"]",
              "example": "lost-found"
            },
            {
              "name": "startAge",
              "in": "query",
              "schema": {
                "type": "integer"
              },
              "description": "Age (monts)",
              "example": "25"
            },
            {
              "name": "endAge",
              "in": "query",
              "schema": {
                "type": "integer"
              },
              "description": "Age (monts)",
              "example": "35"
            },
            {
              "name": "sex",
              "in": "query",
              "schema": {
                "type": "string"
              },
              "description": "Sex [\"male\", \"female\"]",
              "example": "male"
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {}
              }
            }
          }
        }
      },
      "/api/notices/favorite/{id}": {
        "patch": {
          "tags": ["Notice"],
          "summary": "Follow notice",
          "parameters": [
            {
              "in": "path",
              "name": "id",
              "required": true,
              "type": "string",
              "description": "Get notice by id"
              }
          ],
          "requestBody": {
            "content": {}
          },
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {}
              }
            }
          }
        }
      },
      "/api/pet": {
        "post": {
          "tags": [
            "Pet"
          ],
          "summary": "Add pet",
          "requestBody": {
            "content": {
              "multipart/form-data": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "example": "Jac"
                    },
                    "birthday": {
                      "type": "string",
                      "example": "30-10-2020"
                    },
                    "type": {
                      "type": "string",
                      "example": "qwe"
                    },
                    "sex": {
                      "type": "string",
                      "example": "male"
                    },
                    "location": {
                      "type": "string",
                      "example": "Kharkiv"
                    },
                    "comments": {
                      "type": "string",
                      "example": "dfghjkl; kjhgfds"
                    },
                    "pet": {
                      "type": "string",
                      "format": "binary"
                    },
                    "title": {
                      "type": "integer",
                      "example": "1111"
                    },
                    "rrrrr": {
                      "type": "string",
                      "example": "rrrr"
                    }
                  }
                }
              }
            }
          },
          "security": [{"BearerA": []}],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {}
              }
            }
          }
        },
        "get": {
          "tags": ["Pet"],
          "summary": "List my pet",
          "security": [{"BearerA": []}],
          "parameters": [
            {
              "name": "limit",
              "in": "query",
              "schema": {
                "type": "integer"
              },
              "description": "Number notices in response",
              "example": "1"
            },
            {
              "name": "page",
              "in": "query",
              "schema": {
                "type": "integer"
              },
              "description": "Pagination page",
              "example": "1"
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {}
              }
            }
          }
        }
      },
      "/api/pet/{id}": {
        "delete": {
          "tags": ["Pet"],
          "summary": "Delete pet",
          "parameters": [
            {
              "in": "path",
              "name": "id",
              "required": true,
              "type": "string",
              "description": "Get notice by id"
              }
          ],
          "security": [{"BearerA": []}],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {}
              }
            }
          }
        }
      }
    },
    "components": {
      "schemas": {
        "NotAuthorized":{
          "type": "object",
          "properties":{
          "message": {
            "type": "string",
            "description": "Not authorized",
            "example": "Not authorized"
          }
        }
        },
        
        "RegistrationRequest": {
          "type": "object",
          "required": [
            "email",
            "password"
          ],
          "properties": {
            "name": {
              "type": "string",
              "description": "User's name",
              "example": "User"
            },
            "email": {
              "type": "string",
              "description": "User's email",
              "example": "user@mail.com"
            },
            "password": {
              "type": "string",
              "description": "User's password",
              "example": "A123456a"
            }
          }
        },
        "RegistrationResponse": {
          "type": "object",
          "properties": {
            "user": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "User name",
                  "example": "Test01"
                },
                "email": {
                  "type": "string",
                  "description": "User email",
                  "example": "test01@mail.com"
                }
              }
            },
            "token": {
              "type": "object",
              "properties": {
                "access": {
                  "type": "string",
                  "description": "access token",
                  "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0YzZmMWI1MDdlNzkzNjBkNWY0ZGMwOCIsImlhdCI6MTY5MDc1OTYwNSwiZXhwIjoxNjkwNzYyNjA1fQ.gyAgBYmlTdp9cVSa3oMwatrOrSv6aZwUUbqdZHXAVMA"
                },
                "refresh": {
                  "type": "string",
                  "description": "refresh token",
                  "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0YzZmMWI1MDdlNzkzNjBkNWY0ZGMwOCIsImlhdCI6MTY5MDc1OTYwNSwiZXhwIjoxNjkwNzY1NjA1fQ.uK3wpExqevXtwZlkbt4VicYWuWz9lXYF6CrhNQhnowE"
                }
              }
            }
          }
        },
        "LoginRequest": {
          "type": "object",
          "required": [
            "email",
            "password"
          ],
          "properties": {
            "email": {
              "type": "string",
              "description": "User email",
              "example": "test01@mail.com"
            },
            "password": {
              "type": "string",
              "description": "User password",
              "example": "A123456a"
            }
          }
        },
        "LoginResponse": {
          "type": "object",
          "properties": {
            "user": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "User name",
                  "example": "Test01"
                },
                "email": {
                  "type": "string",
                  "description": "User email",
                  "example": "test01@mail.com"
                }
              }
            },
            "token": {
              "type": "object",
              "properties": {
                "access": {
                  "type": "string",
                  "description": "access token",
                  "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0YzZmMWI1MDdlNzkzNjBkNWY0ZGMwOCIsImlhdCI6MTY5MDc1OTYwNSwiZXhwIjoxNjkwNzYyNjA1fQ.gyAgBYmlTdp9cVSa3oMwatrOrSv6aZwUUbqdZHXAVMA"
                },
                "refresh": {
                  "type": "string",
                  "description": "refresh token",
                  "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0YzZmMWI1MDdlNzkzNjBkNWY0ZGMwOCIsImlhdCI6MTY5MDc1OTYwNSwiZXhwIjoxNjkwNzY1NjA1fQ.uK3wpExqevXtwZlkbt4VicYWuWz9lXYF6CrhNQhnowE"
                }
              }
            }
          }
        },
        "RefreshResponse": {
          "type": "object",
          "properties": {
            "token": {
              "type": "object",
              "properties": {
                "access": {
                  "type": "string",
                  "description": "access token",
                  "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0YzZmMWI1MDdlNzkzNjBkNWY0ZGMwOCIsImlhdCI6MTY5MDc1OTYwNSwiZXhwIjoxNjkwNzYyNjA1fQ.gyAgBYmlTdp9cVSa3oMwatrOrSv6aZwUUbqdZHXAVMA"
                },
                "refresh": {
                  "type": "string",
                  "description": "refresh token",
                  "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0YzZmMWI1MDdlNzkzNjBkNWY0ZGMwOCIsImlhdCI6MTY5MDc1OTYwNSwiZXhwIjoxNjkwNzY1NjA1fQ.uK3wpExqevXtwZlkbt4VicYWuWz9lXYF6CrhNQhnowE"
                }
              }
            }
          }
        },
        "CurrentResponse": {
          "type": "object",
          "properties": {
            "user": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "User name",
                  "example": "Test01"
                },
                "email": {
                  "type": "string",
                  "description": "User email",
                  "example": "test01@mail.com"
                },
                "birthday": {
                  "type": "string",
                  "description": "User birthday",
                  "example": "30-10-1980"
                },
                "phone":  {
                  "type": "string",
                  "description": "User phone",
                  "example": "+380667778899"
                },
                "city":  {
                  "type": "string",
                  "description": "User city",
                  "example": "Kharkiv"
                },
                "avatarURL":  {
                  "type": "string",
                  "description": "User avatar",
                  "example": "v1690339589/avatars/m55p4t9joavvba8okhiy.jpg"
                }
              }
            }
           }
         },
         "InfoRequest":{
          "type": "object",
                  "properties": {
                    "birthday": {
                      "type": "string",
                      "example": "10-10-2020"
                    },
                    "city": {
                      "type": "string",
                      "example": "Ukraine"
                    },
                    "email": {
                      "type": "string",
                      "example": "test01@mail.com"
                    },
                    "name": {
                      "type": "string",
                      "example": "Test01"
                    },
                    "phone": {
                      "type": "string",
                      "example": "+380667778899"
                    }
                  }
         }
        },
      "securitySchemes": {
        "BearerA": {
          "type": "http",
          "scheme": "bearer",
          "bearerFormat": "JWT"
        },      "BearerR": {
          "type": "http",
          "scheme": "bearer",
          "bearerFormat": "JWT"
        }
      }
    }
  }
