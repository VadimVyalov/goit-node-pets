{
    "openapi": "3.0.3",
    "info": {
      "version": "1.2.3",
      "title": "Save Pets",
      "description": "Save Pets CRUD documentation",
      "license": {
        "name": "MIT",
        "url": "https://opensource.org/licenses/MIT"
      }
    },
  
  "consumes": ["application/json", "multipart/form-data"],
  "produces": ["application/json"],
  "servers": [{ "url": "https://project-savepets05-be.onrender.com/api" },
              { "url": "http://localhost:5000/api" }],
    "tags": [
       {
        "name": "User",
        "description": "Users endpoints"
      }, 
      {
        "name": "Notice",
        "description": "Notices endpoints"
      }, 
      {
        "name": "Pet",
        "description": "Pets endpoints"
      }
    ],
  
    "paths": {
      "/users/register": {
        "post": {
          "tags": ["User"],
          "summary": "Register",
          "description": "Register",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationRequest"
                },
                "example": {
                  "email": "test01@mail.com",
                  "name": "Test01",
                  "password": "A123456a"
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "Registration Successful",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/RegistrationResponse"
                  }
                }
              }
            },
            "400": {"description": "Registration denied"},
            "409": {"description": "Email in use..."},
            "500": {"description": "Server error"}
          }
        }
      },
      "/users/login": {
        "post": {
          "tags": [
            "User"
          ],
          "summary": "Login user",
          "description": "Login",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "email": {
                      "type": "string",
                      "example": "test01@mail.com"
                    },
                    "password": {
                      "type": "string",
                      "example": "A123456a"
                    }
                  }
                },
                "example": {
                  "email": "test01@mail.com",
                  "password": "A123456a"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Login Successful",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/LoginResponse"
                  }
                }
              }
            },
            "401": { "description": "Email or password is wrong"},
            "500": {"description": "Server error"}
          }
        }
      },
      "/users/refresh": {
        "post": {
          "tags": [
            "User"
          ],
          "summary": "Refresh token",
          "description": "Refresh",
          "parameters": [],
          "security": [
            {
              "BearerR": []
            }
          ],
          "responses": {
            "200": {
              "description": "Refresh token successful",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/RefreshResponse"
                  }
                }
              }
            },
            "401": {"description": " Not authorized"},
            "500": {"description": "Server error"}
          }

        }
      },
      "/users/logout": {
        "post": {
          "tags": [
            "User"
          ],
          "summary": "Logout",
          "description": "Logout",
          "security": [{"BearerA": []}],
          "responses": {
            "204": {"description": "Logout  successful"},
            "401": {"description": " Not authorized" },
            "500": {"description": "Server error"}
          }
          }
      },
      "/users/current": {
        "get": {
          "tags": [ "User" ],
          "summary": "Current",
          "description": "Get user info",
          "security": [{"BearerA": []}],
          "responses": {
            "200": {
              "description": "Get user info successful",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/CurrentResponse"
                  }
                }
              }
            },
            "401": {"description": " Not authorized"},
            "500": {"description": "Server error"}
          }
        }
      },
      "/users/info": {
        "patch": {
          "tags": ["User"],
          "summary": "Info",
          "description": "Update user info ",          
          "security": [{"BearerA": []}],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InfoRequest"
                },
                "example": {
                  "birthday": "10-10-2020",
                  "city": "Ukraine",
                  "email": "test01@mail.com",
                  "name": "Test01",
                  "phone": "+380667778899"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Update user info successful",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties":{
                    "message": {
                      "type": "string",
                      "example": "User info succesfull updated"
                    }
                  }
                  }
                }
              }
            },
            "401": {"description": " Not authorized"},
            "500": {"description": "Server error"}
          }
        }
      },
      "/users/avatars": {
        "patch": {
          "tags": ["User"],
          "summary": "Avatar",
          "description": "Update user avatar ",
          "security": [{"BearerA": []}],
          "requestBody": {
            "content": {
              "multipart/form-data": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "avatar": {
                      "type": "string",
                      "format": "binary"
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Update user avatar successful",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties":{
                    "avatarURL": {
                      "type": "string",
                      "example": "v1690859464/avatars/qdzn7idpzuhd2rtkkyav.jpg"
                    }
                  }
                  }
                }
              }
            },
            "400": {"description": "Wrong upload images ..."},
            "401": {"description": "Not authorized"},
            "500": {"description": "Server error"}
          }
        }
      },
      "/notices": {
        "post": {
          "tags": ["Notice"],
          "summary": "Add notice",
          "security": [{"BearerA": []}],
          "requestBody": {
            "content": {
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/AddNoticeRequest"
                  }
                }
              }
            },
          
         
          "responses": {
            "200": {
              "description": "Add new notice successful",
              "content": {
                "application/json": {
                  "schema": {
                   "type":"object",
                   "properties":{
                    "id": {
                      "type": "string",
                      "example": "64c8c233d5a106d9941393b7",
                      "description": "MongoDB UUID"
                    }
                   }
                  }
                }
              }
            },
            "401": {"description": " Not authorized"},
            "500": {"description": "Server error"}
          }
        }
      },
      "/notices/category": {
        "get": {
          "tags": ["Notice"],
          "summary": "List notices by category",
          "parameters": [
            {
              "name": "limit",
              "in": "query",
              "schema": {
                "type": "integer"
              },
              "description": "Number notices in response",
              "example": "1"
            },
            {
              "name": "page",
              "in": "query",
              "schema": {
                "type": "integer"
              },
              "description": "Pagination page",
              "example": "1"
            },
            {
              "name": "title",
              "in": "query",
              "schema": {
                "type": "string"
              },
              "description": "Notice title",
              "example": "de"
            },
            {
              "name": "category",
              "in": "query",
              "schema": {
                "type": "string"
              },
              "description": "Category  [\"sell\", \"lost-found\", \"for-free\"]",
              "example": "lost-found"
            },
            {
              "name": "startAge",
              "in": "query",
              "schema": {
                "type": "integer"
              },
              "description": "Age (monts)",
              "example": "25"
            },
            {
              "name": "endAge",
              "in": "query",
              "schema": {
                "type": "integer"
              },
              "description": "Age (monts)",
              "example": "35"
            },
            {
              "name": "sex",
              "in": "query",
              "schema": {
                "type": "string"
              },
              "description": "Sex [\"male\", \"female\"]",
              "example": "male"
            }
          ],
          "responses": {
            "200": {
              "description": "Get notices successful",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NoticesResponse"
                  }
                }
              }
            },
            "404": {"description": "Error get notice"},
            "500": {"description": "Server error"}
          }
        }
      },
      "/notices/{id}": {
        "get": {
          "tags": ["Notice"],
          "summary": "Get full notice info by Id",
          "parameters": [
            {
              "in": "path",
              "name": "id",
              "required": true,
              "type": "string",
              "description": "Get notice by id"
              }
          ],

          "responses": {
            "200": {
              "description": "Get notice info successful",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NoticeResponse"
                  }
                }
              }
            },
            "404": {"description": "Error get notice"},
            "500": {"description": "Server error"}
          }
        },
        "delete": {
          "tags": ["Notice"],
          "summary": "Delete notice",
          "parameters": [
            {
              "in": "path",
              "name": "id",
              "required": true,
              "type": "string",
              "description": "Delete notice by id"
              }
          ],
          "security": [{"BearerA": []}
          ],
          "responses": {
            "200": {
              "description": "Remove notice successful",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties":{
                    "id": {
                      "type": "string",
                      "description": "notice id",
                      "example": "64c932b8996e6c3d7a692b69"
                    },
                    "deleted": {
                      "type": "boolean",
                      "description": "notice deleted status",
                      "example": "true"
                    }
                  }
                  }
                }
              }
            },
            
            "401": {"description": "Not authorized"},
            "404": {"description": "Error remove notice"},
            "500": {"description": "Server error"}
          }
        }
      },
      "/notices/myads": {
        "get": {
          "tags": ["Notice"],
          "summary": "List my notice",
          "security": [{"BearerA": []}],
          "parameters": [
            {
              "name": "limit",
              "in": "query",
              "schema": {
                "type": "integer"
              },
              "description": "Number notices in response",
              "example": "1"
            },
            {
              "name": "page",
              "in": "query",
              "schema": {
                "type": "integer"
              },
              "description": "Pagination page",
              "example": "1"
            },
            {
              "name": "title",
              "in": "query",
              "schema": {
                "type": "string"
              },
              "description": "Notice title",
              "example": "de"
            },
            {
              "name": "category",
              "in": "query",
              "schema": {
                "type": "string"
              },
              "description": "Category  [\"sell\", \"lost-found\", \"for-free\"]",
              "example": "lost-found"
            },
            {
              "name": "startAge",
              "in": "query",
              "schema": {
                "type": "integer"
              },
              "description": "Age (monts)",
              "example": "25"
            },
            {
              "name": "endAge",
              "in": "query",
              "schema": {
                "type": "integer"
              },
              "description": "Age (monts)",
              "example": "35"
            },
            {
              "name": "sex",
              "in": "query",
              "schema": {
                "type": "string"
              },
              "description": "Sex [\"male\", \"female\"]",
              "example": "male"
            }
          ],
          "responses": {
            "200": {
              "description": "Get current user notices successful",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NoticesResponse"
                  }
                }
              }
            },
            "401": {"description": "Not authorized"},
            "404": {"description": "Error get notice"},
            "500": {"description": "Server error"}
          }
        }
      },
      "/notices/favorite": {
        "get": {
          "tags": ["Notice"],
          "summary": "List favorite notice",
          "security": [{"BearerA": []}],
          "parameters": [
            {
              "name": "limit",
              "in": "query",
              "schema": {
                "type": "integer"
              },
              "description": "Number notices in response",
              "example": "1"
            },
            {
              "name": "page",
              "in": "query",
              "schema": {
                "type": "integer"
              },
              "description": "Pagination page",
              "example": "1"
            },
            {
              "name": "title",
              "in": "query",
              "schema": {
                "type": "string"
              },
              "description": "Notice title",
              "example": "de"
            },
            {
              "name": "category",
              "in": "query",
              "schema": {
                "type": "string"
              },
              "description": "Category  [\"sell\", \"lost-found\", \"for-free\"]",
              "example": "lost-found"
            },
            {
              "name": "startAge",
              "in": "query",
              "schema": {
                "type": "integer"
              },
              "description": "Age (monts)",
              "example": "25"
            },
            {
              "name": "endAge",
              "in": "query",
              "schema": {
                "type": "integer"
              },
              "description": "Age (monts)",
              "example": "35"
            },
            {
              "name": "sex",
              "in": "query",
              "schema": {
                "type": "string"
              },
              "description": "Sex [\"male\", \"female\"]",
              "example": "male"
            }
          ],
          "responses": {
            "200": {
              "description": "Get favorited notices successful",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/NoticesResponse"
                  }
                }
              }
            },
            "401": {"description": "Not authorized"},
            "404": {"description": "Error get notice"},
            "500": {"description": "Server error"}
          }
        }
      },
      "/notices/favorite/{id}": {
        "patch": {
          "tags": ["Notice"],
          "summary": "Follow notice",
          "security": [{"BearerA": []}],
          "parameters": [
            {
              "in": "path",
              "name": "id",
              "required": true,
              "type": "string",
              "description": " Notice id (MongoDB UUID)",
              "example":"64c932b8996e6c3d7a692b69"
              }
          ],
          "requestBody": {
            "content": {}
          },

          "responses": {
            "200": {
              "description": "Remove notice successful",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties":{
                    "id": {
                      "type": "string",
                      "description": "notice id",
                      "example": "64c932b8996e6c3d7a692b69"
                    },
                    "deleted": {
                      "type": "boolean",
                      "description": "notice deleted status",
                      "example": "true"
                    }
                  }
                  }
                }
              }
            },
            
            "401": {"description": "Not authorized"},

            "404": { "description": "Error follow user notice" },
            "500": {"description": "Server error"}
          }
        }
      },
      "/pet": {
        "post": {
          "tags": ["Pet"],
          "security": [{"BearerA": []}],
          "summary": "Add pet",
          "requestBody": {
            "content": {
              "multipart/form-data": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "example": "Fixik"
                    },
                    "birthday": {
                      "type": "string",
                      "example": "30-10-2020"
                    },
                    "type": {
                      "type": "string",
                      "example": "animal"
                    },
                    "comments": {
                      "type": "string",
                      "example": "Good pet"
                    },
                    "pet": {
                      "type": "string",
                      "format": "binary"
                    }

                  }
                }
              }
            }
          },
          
          "responses": {
            "200": {
              "description": "Add pet successful",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties":{
                    "id": {
                      "type": "string",
                      "description": "notice id",
                      "example": "64c932b8996e6c3d7a692b69"
                    }
                  }
                  }
                }
              }
            },
            "400": { "description": "Error add pet"},
            "401": {"description": "Not authorized"},
            "500": {"description": "Server error"}
          }
        },
        "get": {
          "tags": ["Pet"],
          "summary": "List my pet",
          "security": [{"BearerA": []}],
          "parameters": [
            {
              "name": "limit",
              "in": "query",
              "schema": {
                "type": "integer"
              },
              "description": "Number notices in response",
              "example": "1"
            },
            {
              "name": "page",
              "in": "query",
              "schema": {
                "type": "integer"
              },
              "description": "Pagination page",
              "example": "1"
            }
          ],
          "responses": {
            "200": {
              "description": "Get current user info with your pet successful",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/PetsResponse"
                  }
                }
              }
            },
            "401": {"description": "Not authorized"},
            "404": {"description": "Error get user info"},
            "500": {"description": "Server error"}
          }
        }
      },
      "/pet/{id}": {
        "delete": {
          "tags": ["Pet"],
          "summary": "Delete pet",
          "parameters": [
            {
              "in": "path",
              "name": "id",
              "required": true,
              "type": "string",
              "description": "Get notice by id"
              }
          ],
          "security": [{"BearerA": []}],
          "responses": {
            "200": {
              "description": "Remove pet successful",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties":{
                    "id": {
                      "type": "string",
                      "description": "notice id",
                      "example": "64c932b8996e6c3d7a692b69"
                    },
                    "deleted": {
                      "type": "boolean",
                      "description": "notice deleted status",
                      "example": "true"
                    }
                  }
                  }
                }
              }
            },
            "400": { "description": "Error remove pet" },
            "401": {"description": "Not authorized"},
            "500": {"description": "Server error"}
          }
        }
      }
    },
    "components": {
      "schemas": {
        "NotAuthorized":{
          "type": "object",
          "properties":{
          "message": {
            "type": "string",
            "description": "Not authorized",
            "example": "Not authorized"
          }
        }
        },
        "RegistrationRequest": {
          "type": "object",
          "required": [
            "email",
            "password"
          ],
          "properties": {
            "name": {
              "type": "string",
              "description": "User name",
              "example": "User"
            },
            "email": {
              "type": "string",
              "description": "User email",
              "example": "user@mail.com"
            },
            "password": {
              "type": "string",
              "description": "User password",
              "example": "A123456a"
            }
          }
        },
        "RegistrationResponse": {
          "type": "object",
          "properties": {
            "user": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "User name",
                  "example": "Test01"
                },
                "email": {
                  "type": "string",
                  "description": "User email",
                  "example": "test01@mail.com"
                }
              }
            },
            "token": {
              "type": "object",
              "properties": {
                "access": {
                  "type": "string",
                  "description": "access token",
                  "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0YzZmMWI1MDdlNzkzNjBkNWY0ZGMwOCIsImlhdCI6MTY5MDc1OTYwNSwiZXhwIjoxNjkwNzYyNjA1fQ.gyAgBYmlTdp9cVSa3oMwatrOrSv6aZwUUbqdZHXAVMA"
                },
                "refresh": {
                  "type": "string",
                  "description": "refresh token",
                  "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0YzZmMWI1MDdlNzkzNjBkNWY0ZGMwOCIsImlhdCI6MTY5MDc1OTYwNSwiZXhwIjoxNjkwNzY1NjA1fQ.uK3wpExqevXtwZlkbt4VicYWuWz9lXYF6CrhNQhnowE"
                }
              }
            }
          }
        },
        "LoginRequest": {
          "type": "object",
          "required": [
            "email",
            "password"
          ],
          "properties": {
            "email": {
              "type": "string",
              "description": "User email",
              "example": "test01@mail.com"
            },
            "password": {
              "type": "string",
              "description": "User password",
              "example": "A123456a"
            }
          }
        },
        "LoginResponse": {
          "type": "object",
          "properties": {
            "user": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "User name",
                  "example": "Test01"
                },
                "email": {
                  "type": "string",
                  "description": "User email",
                  "example": "test01@mail.com"
                }
              }
            },
            "token": {
              "type": "object",
              "properties": {
                "access": {
                  "type": "string",
                  "description": "access token",
                  "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0YzZmMWI1MDdlNzkzNjBkNWY0ZGMwOCIsImlhdCI6MTY5MDc1OTYwNSwiZXhwIjoxNjkwNzYyNjA1fQ.gyAgBYmlTdp9cVSa3oMwatrOrSv6aZwUUbqdZHXAVMA"
                },
                "refresh": {
                  "type": "string",
                  "description": "refresh token",
                  "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0YzZmMWI1MDdlNzkzNjBkNWY0ZGMwOCIsImlhdCI6MTY5MDc1OTYwNSwiZXhwIjoxNjkwNzY1NjA1fQ.uK3wpExqevXtwZlkbt4VicYWuWz9lXYF6CrhNQhnowE"
                }
              }
            }
          }
        },
        "RefreshResponse": {
          "type": "object",
          "properties": {
            "token": {
              "type": "object",
              "properties": {
                "access": {
                  "type": "string",
                  "description": "access token",
                  "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0YzZmMWI1MDdlNzkzNjBkNWY0ZGMwOCIsImlhdCI6MTY5MDc1OTYwNSwiZXhwIjoxNjkwNzYyNjA1fQ.gyAgBYmlTdp9cVSa3oMwatrOrSv6aZwUUbqdZHXAVMA"
                },
                "refresh": {
                  "type": "string",
                  "description": "refresh token",
                  "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0YzZmMWI1MDdlNzkzNjBkNWY0ZGMwOCIsImlhdCI6MTY5MDc1OTYwNSwiZXhwIjoxNjkwNzY1NjA1fQ.uK3wpExqevXtwZlkbt4VicYWuWz9lXYF6CrhNQhnowE"
                }
              }
            }
          }
        },
        "CurrentResponse": {

              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "User name",
                  "example": "Test01"
                },
                "email": {
                  "type": "string",
                  "description": "User email",
                  "example": "test01@mail.com"
                },
                "birthday": {
                  "type": "string",
                  "description": "User birthday",
                  "example": "30-10-1980"
                },
                "phone":  {
                  "type": "string",
                  "description": "User phone",
                  "example": "+380667778899"
                },
                "city":  {
                  "type": "string",
                  "description": "User city",
                  "example": "Kharkiv"
                },
                "avatarURL":  {
                  "type": "string",
                  "description": "User avatar",
                  "example": "v1690339589/avatars/m55p4t9joavvba8okhiy.jpg"
                }
     
           }
         },
         "InfoRequest":{
          "type": "object",
                  "properties": {
                    "birthday": {
                      "type": "string",
                      "example": "10-10-2020"
                    },
                    "city": {
                      "type": "string",
                      "example": "Ukraine"
                    },
                    "email": {
                      "type": "string",
                      "example": "test01@mail.com"
                    },
                    "name": {
                      "type": "string",
                      "example": "Test01"
                    },
                    "phone": {
                      "type": "string",
                      "example": "+380667778899"
                    }
                  }
         },
         "AddNoticeRequest":{
          "type": "object",
                  "properties": {
                    "title": {
                      "type": "string",
                      "example": "new notice",
                      "required":true,
                      "description": "Field 'title' must contain minimum 2 characters, maximum 32, only unicode letter and digit "
                    },
                    "category": {
                      "type": "string",
                      "example": "sell",
                      "required":true,
                      "description": "Field 'category' must contain one of ['sell', 'lost-found', 'for-free']"
                    },
                    "name": {
                      "type": "string",
                      "example": "Jack",
                      "required":true,
                      "description": "Field 'name' must contain minimum 2 characters, maximum 16, only unicode letter and first leter uppercase"

                    },
                    "birthday": {
                      "type": "string",
                      "example": "30-10-2020",
                      "required":true,
                      "description": "Field 'birthday' must contain data in format DD-MM-YYYY"
                    },
                    "type": {
                      "type": "string",
                      "example": "buldog",
                      "required":true,
                      "description": "Field 'type' must contain minimum 2 characters, maximum 16, only unicode letter"
                    },
                    "sex": {
                      "type": "string",
                      "example": "male",
                      "required":true,
                      "description": "Field 'sex' must contain one of ['male', 'female']"
                    },
                    "location": {
                      "type": "string",
                      "example": "Kharkiv",
                      "required":true,
                      "description": "Field 'location' must contain minimum 2 characters, maximum 32, only unicode letter and first leter uppercase"
                    },
                    "price": {
                      "type": "integer",
                      "example": "100",
                      "description": "Field 'price' number, required for category 'sale' "
                    },
                    "comments": {
                      "type": "string",
                      "example": "dfghjkl; kjhgfds",
                      "description": "Field 'comments' must contain from 1 to 120 characters"
                    },
                    "notice": {
                      "type": "string",
                      "format": "binary",
                      "description": "Image format file",
                      "required": true
                    }
         }
        },
         "NoticesResponse": {
          "type": "object",
          "properties": {
            "total": {
              "type": "number",
              "description": "total notice",
              "example": "20"
            },
            "notice":{
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Notice id",
                  "example": "64c084f3ddf5cee42947554a"
                },
                "title": {
                  "type": "string",
                  "description": "Notice title",
                  "example": "Notice title"
                },
                "category": {
                  "type": "string",
                  "description": "Notice category",
                  "example": "lost-found"
                },
                "sex":  {
                  "type": "string",
                  "description": "Pet sex",
                  "example": "male"
                },
                "location":  {
                  "type": "string",
                  "description": "Pet location",
                  "example": "Kharkiv"
                },
                "photoURL":  {
                  "type": "string",
                  "description": "Pet photo",
                  "example": "v1690897723/notices/01_ye55wd.jpg"
                },
                "age":  {
                  "type": "string",
                  "description": "Pet age",
                  "example": "3 month"
                },                
                "favorite":  {
                  "type": "boolean",
                  "description": "favorite",
                  "example": "false"
                },
                "owner":  {
                  "type": "boolean",
                  "description": "owner",
                  "example": "true"
                }
              }
            }
            }
          }
         },
         "NoticeResponse": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Notice id",
                  "example": "64c084f3ddf5cee42947554a"
                },
                "title": {
                  "type": "string",
                  "description": "Notice title",
                  "example": "Notice title"
                },
                "category": {
                  "type": "string",
                  "description": "Notice category",
                  "example": "lost-found"
                },
                "name": {
                  "type": "string",
                  "description": "Pet name",
                  "example": "Jack"
                },
                "birthday": {
                  "type": "string",
                  "description": "Pet birthday 'DD-MM-YYY'",
                  "example": "30-10-2020"
                },
                "type": {
                  "type": "string",
                  "description": "Pet type",
                  "example": "buldog"
                },
                "sex":  {
                  "type": "string",
                  "description": "Pet sex",
                  "example": "male"
                },
                "location":  {
                  "type": "string",
                  "description": "Pet location",
                  "example": "Kharkiv"
                },
                "photoURL":  {
                  "type": "string",
                  "description": "Pet photo",
                  "example": "v1690897723/notices/01_ye55wd.jpg"
                },
                "price": {
                  "type": "number",
                  "description": "Pet price (for sell category)",
                  "example": 100
                },
                "comments": {
                  "type": "string",
                  "description": "Notice comments",
                  "example": "Good dog"
                },
                "email": {
                  "type": "string",
                  "description": "User email",
                  "example": "test01@mail.com"
                },

                "phone":  {
                  "type": "string",
                  "description": "User phone",
                  "example": "+380667778899"
                },
                "favorite":  {
                  "type": "boolean",
                  "description": "favorite",
                  "example": "false"
                },
                "owner":  {
                  "type": "boolean",
                  "description": "owner",
                  "example": "true"
                },
                "delete":  {
                  "type": "boolean",
                  "description": "deleted notice",
                  "example": "false"
                }
          }
         },
         "PetsResponse": {
          "type": "object",
          "properties": {
            "user":{
            
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "User name",
                        "example": "Test01"
                      },
                      "email": {
                        "type": "string",
                        "description": "User email",
                        "example": "test01@mail.com"
                      },
                      "birthday": {
                        "type": "string",
                        "description": "User birthday",
                        "example": "30-10-1980"
                      },
                      "phone":  {
                        "type": "string",
                        "description": "User phone",
                        "example": "+380667778899"
                      },
                      "city":  {
                        "type": "string",
                        "description": "User city",
                        "example": "Kharkiv"
                      },
                      "avatarURL":  {
                        "type": "string",
                        "description": "User avatar",
                        "example": "v1690339589/avatars/m55p4t9joavvba8okhiy.jpg"
                      }
            }
          },
            "total": {
              "type": "number",
              "description": "total pets",
              "example": "2"
            },
            "pet":{
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Notice id",
                  "example": "64c084f3ddf5cee42947554a"
                },
                "name": {
                  "type": "string",
                  "description": "Pet name",
                  "example": "Jack"
                },
                "birthday": {
                  "type": "string",
                  "description": "Pet birthday",
                  "example": "30-10-2020"
                },
                "type": {
                  "type": "string",
                  "description": "Pet type",
                  "example": "buldog"
                },
                "comments": {
                  "type": "string",
                  "description": "Comments about pet",
                  "example": "Bad dog"
                },
                "photoURL":  {
                  "type": "string",
                  "description": "Pet photo",
                  "example": "v1690897723/notices/01_ye55wd.jpg"
                }
                 
              }
            }
            }
          }
         }
      },
      "securitySchemes": {
        "BearerA": {
          "type": "http",
          "scheme": "bearer",
          "bearerFormat": "JWT"
        },      "BearerR": {
          "type": "http",
          "scheme": "bearer",
          "bearerFormat": "JWT"
        }
      }
    }
  }
